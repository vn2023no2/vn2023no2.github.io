"use strict";(self.webpackChunkvn_2023_no_2_github_io=self.webpackChunkvn_2023_no_2_github_io||[]).push([[9656],{5029:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var t=r(5893),i=r(1151);const c={sidebar_position:200},s="1. Middleware BrityMail Architecture",a={id:"IT/other/cmc-sds",title:"1. Middleware BrityMail Architecture",description:"MD BrityMail Architecture",source:"@site/docs/IT/100-other/200-cmc-sds.md",sourceDirName:"IT/100-other",slug:"/IT/other/cmc-sds",permalink:"/docs/IT/other/cmc-sds",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/IT/100-other/200-cmc-sds.md",tags:[],version:"current",sidebarPosition:200,frontMatter:{sidebar_position:200},sidebar:"tutorialSidebar",previous:{title:"Hardware",permalink:"/docs/IT/other/hardware"},next:{title:"Other",permalink:"/docs/category/other-1"}},o={},d=[{value:"3.1 Kubernetes",id:"31-kubernetes",level:2},{value:"3.1.1",id:"311",level:3},{value:"3.1.2 H\u01b0\u1edbng d\u1eabn x\u1eed l\xfd s\u1ef1 c\u1ed1 v\u1edbi Pod tr\xean K8S",id:"312-h\u01b0\u1edbng-d\u1eabn-x\u1eed-l\xfd-s\u1ef1-c\u1ed1-v\u1edbi-pod-tr\xean-k8s",level:3},{value:"3.1.3 M\u1ed9t s\u1ed1 command hay s\u1eed d\u1ee5ng trong qu\xe1 tr\xecnh v\u1eadn h\xe0nh Middleware service tr\xean K8S.",id:"313-m\u1ed9t-s\u1ed1-command-hay-s\u1eed-d\u1ee5ng-trong-qu\xe1-tr\xecnh-v\u1eadn-h\xe0nh-middleware-service-tr\xean-k8s",level:3},{value:"3.2 ArgoCD",id:"32-argocd",level:2}];function l(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"1-middleware-britymail-architecture",children:"1. Middleware BrityMail Architecture"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{alt:"MD BrityMail Architecture",src:r(4482).Z+"",width:"2148",height:"1250"}),"\r\nDomain t\u1eeb DNS s\u1ebd \u0111\u01b0\u1ee3c tr\u1ecf v\u1ec1 1 trong 3 l\u1ef1a ch\u1ecdn b\xean d\u01b0\u1edbi:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Tr\u1ecf v\u1ec1 CloudFront c\u1ee7a AWS: l\u1ef1a ch\u1ecdn n\xe0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c s\u1eed d\u1ee5ng cho c\xe1c domain c\u1ee7a kh\xe1ch h\xe0ng nh\u01b0: solu-m.brityworks.com, ... C\xe1c domain n\xe0y th\u01b0\u1eddng s\u1ebd \u0111i qua WAF => Internal ELB r\u1ed3i cu\u1ed1i c\xf9ng l\xe0 v\xe0o Ingress c\u1ee7a K8S."}),"\n",(0,t.jsx)(n.li,{children:"Tr\u1ecf v\u1ec1 Public ELB: l\u1ef1a ch\u1ecdn n\xe0y th\u01b0\u1eddng \u0111\u01b0\u1ee3c d\xf9ng cho c\xe1c domain n\u1ed9i b\u1ed9 nh\u01b0: monitor.brityworks.com, ... C\xe1c domain n\xe0y t\u1eeb Public ELB s\u1ebd \u0111i lu\xf4n v\xe0o c\xe1c service ph\xeda sau (EC2, Ingress (K8S))."}),"\n",(0,t.jsx)(n.li,{children:"Tr\u1ecf v\u1ec1 Internal ELB: proxy-portal.brityworks.com."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u0110\u1ec3 ki\u1ec3m tra domain \u0111\u01b0\u1ee3c tr\u1ecf v\u1ec1 \u0111\xe2u, c\xe1c b\u1ea1n c\xf3 th\u1ec3 d\xf9ng:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["C1: ",(0,t.jsx)(n.code,{children:"nslookup"})," t\u1eeb terminal tr\xean VDI."]}),"\n",(0,t.jsx)(n.li,{children:"C2: V\xe0o trang qu\u1ea3n l\xfd domain c\u1ee7a SDS."}),"\n"]}),"\n",(0,t.jsx)(n.h1,{id:"2-deploy-flow",children:"2. Deploy flow"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"MD BrityMail Architecture",src:r(8702).Z+"",width:"907",height:"610"})}),"\n",(0,t.jsx)(n.h1,{id:"3-tools",children:"3. Tools"}),"\n",(0,t.jsx)(n.h2,{id:"31-kubernetes",children:"3.1 Kubernetes"}),"\n",(0,t.jsx)(n.h3,{id:"311",children:"3.1.1"}),"\n",(0,t.jsx)(n.h3,{id:"312-h\u01b0\u1edbng-d\u1eabn-x\u1eed-l\xfd-s\u1ef1-c\u1ed1-v\u1edbi-pod-tr\xean-k8s",children:"3.1.2 H\u01b0\u1edbng d\u1eabn x\u1eed l\xfd s\u1ef1 c\u1ed1 v\u1edbi Pod tr\xean K8S"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{alt:"MD BrityMail Architecture",src:r(2119).Z+"",width:"611",height:"364"}),(0,t.jsx)(n.br,{}),"\n","Trong K8S, v\u1edbi 3 command nh\u01b0 b\xean d\u01b0\u1edbi c\xe1c b\u1ea1n c\xf3 th\u1ec3 t\xecm ra h\u1ea7u h\u1ebft (70 - 80%) c\xe1c nguy\xean nh\xe2n g\xe2y l\u1ed7i t\u1edbi pod."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"kubectl describe pod pod_name"}),": d\xf9ng l\u1ec7nh n\xe0y khi pod c\xf3 c\xe1c tr\u1ea1ng th\xe1i Pending, Waiting, ImagePullBackOff, ErrImagePull."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"kubectl logs pod_name"}),": d\xf9ng l\u1ec7nh n\xe0y khi pod c\xf3 tr\u1ea1ng th\xe1i CrashLookBackOff."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"kubectl get pod pod_name -o yaml"}),": d\xf9ng l\u1ec7nh n\xe0y khi trong qu\xe1 tr\xecnh ch\u1ea1y pod b\u1ecb restart.\r\nB\u1ea1n c\xf3 th\u1ec3 xem s\u01a1 \u0111\u1ed3 \u0111\u1ea7y \u0111\u1ee7 v\u1ec1 c\xe1ch x\u1eed l\xfd c\xe1c v\u1ea5n \u0111\u1ec1 li\xean quan t\u1edbi pod \u1edf \u0111\xe2y."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"313-m\u1ed9t-s\u1ed1-command-hay-s\u1eed-d\u1ee5ng-trong-qu\xe1-tr\xecnh-v\u1eadn-h\xe0nh-middleware-service-tr\xean-k8s",children:"3.1.3 M\u1ed9t s\u1ed1 command hay s\u1eed d\u1ee5ng trong qu\xe1 tr\xecnh v\u1eadn h\xe0nh Middleware service tr\xean K8S."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ki\u1ec3m tra resource c\u1ee7a c\xe1c container"}),"\n",(0,t.jsxs)(n.li,{children:["Thay \u0111\u1ed5i s\u1ed1 l\u01b0\u1ee3ng pod c\u1ee7a c\xe1c service","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["V\u1edbi c\xe1c service kh\xf4ng c\xf3 HPA (s\u1eeda tr\u1ef1c ti\u1ebfp ",(0,t.jsx)(n.code,{children:"replica"})," \u1edf deployment ho\u1eb7c ",(0,t.jsx)(n.code,{children:"statefullset"}),")"]}),"\n",(0,t.jsx)(n.li,{children:"V\u1edbi c\xe1c service s\u1eed d\u1ee5ng HPA (b\u1eaft bu\u1ed9c ph\u1ea3i s\u1eeda \u1edf HPA)"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:"Restart to\xe0n b\u1ed9 c\xe1c pod (th\u01b0\u1eddng s\u1eed d\u1ee5ng trong c\xe1c \u0111\u1ee3t PM Work)"}),"\n",(0,t.jsx)(n.li,{children:"T\u1eaft to\xe0n b\u1ed9 c\xe1c pod (th\u01b0\u1eddng s\u1eed d\u1ee5ng khi c\u1ea7n ng\u1eaft h\u1ebft k\u1ebft n\u1ed1i (c\xf3 th\u1ec3 l\xe0 v\xe0o DB))"}),"\n",(0,t.jsxs)(n.li,{children:["Delete pod khi pod stuck \u1edf ",(0,t.jsx)(n.code,{children:"Terminating"})," status.","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"kubectl delete pod <PODNAME> --grace-period=0 --force --namespace <NAMESPACE>\n"})}),"\n","Khi s\u1eed d\u1ee5ng command n\xe0y, b\u1ea1n s\u1ebd nh\u1eadn \u0111\u01b0\u1ee3c Warning nh\u01b0 b\xean d\u01b0\u1edbi",(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.code,{children:"warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely."}),(0,t.jsx)(n.br,{}),"\n","Pod s\u1ebd b\u1ecb x\xf3a \u1edf t\u1ea7ng K8S nh\u01b0ng container c\xf3 th\u1ec3 v\u1eabn running \u1edf t\u1ea7ng container runtime. V\xec v\u1eady, c\u1ea7n check l\u1ea1i c\xe1c container tr\xean node \u0111\u1ec3 x\xf3a tri\u1ec7t \u0111\u1ec3."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"32-argocd",children:"3.2 ArgoCD"}),"\n",(0,t.jsx)(n.p,{children:"H\u01b0\u1edbng d\u1eabn t\u1ea1o application tr\xean ArgoCD"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apiVersion: argoproj.io/v1alpha1\r\nkind: Application\r\nmetadata:\r\n  name: application-name\r\n  namespace: argocd\r\n  # Add a this finalizer ONLY if you want these to cascade delete.\r\n  finalizers:\r\n    - resources-finalizer.argocd.argoproj.io\r\nspec:\r\n  project: default\r\n  source:\r\n    repoURL: https://gitlab.saobang.vn/nextpay1/nextpay-devops-management/argocd/cert-manager-prod-np-other.git\r\n    targetRevision: HEAD\r\n    path: .\r\n\r\n    helm:\r\n      # Release name override (defaults to application name)\r\n      releaseName: cert-manager-prod-np-other\r\n      # Helm values files for overriding values in the helm chart\r\n      # The path is relative to the spec.source.path directory defined above\r\n      valueFiles:\r\n        - values-prod.yaml\r\n      # Optional Helm version to template with. If omitted it will fallback to look at the 'apiVersion' in Chart.yaml\r\n      # and decide which Helm binary to use automatically. This field can be either 'v2' or 'v3'.\r\n      version: v3\r\n\r\n  destination:\r\n    server: https://10.0.22.40/k8s/clusters/c-pjhgw\r\n    namespace: cert-manager\r\n  # Sync policy\r\n  syncPolicy:\r\n    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.\r\n      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).\r\n      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).\r\n    syncOptions: # Sync options which modifies sync behavior\r\n      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.\r\n    # The retry feature is available since v1.7\r\n    retry:\r\n      limit: 2 # number of failed sync attempt retries; unlimited number of attempts if less than 0\r\n      backoff:\r\n        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")\r\n        factor: 2 # a factor to multiply the base duration after each failed retry\r\n        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},4482:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/MD-BrityMail-Architecture-v3-1621c9b5f3fdb7ce696ebb09482121e6.png"},8702:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/deploy-flow-cf6f99f7a32d2c65728d8f49715d8686.png"},2119:(e,n,r)=>{r.d(n,{Z:()=>t});const t=r.p+"assets/images/pillar-to-solve-pod-36ea5cc53d9bbfd2892843f8a0390f39.png"},1151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>s});var t=r(7294);const i={},c=t.createContext(i);function s(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);